@{
    Layout = "_MainLayout";

    var facultyId = (string)ViewData["FacultyId"];
}

@section Body
{
    <div class="container vh-100">
        @Html.Hidden(GlobalSelectors.FacultyId, facultyId)

        <div class="d-flex flex-grow-1 flex-column gap-3 justify-content-center p-1 mh-100 h-100 mt-5">
            <div class="d-flex gap-3 justify-content-center">
                <div class="w-40 input">
                    @(Html.When(JqueryBind.Change)
                          .OnSuccess(dsl => dsl.WithId("search").Trigger.None())
                          .AsHtmlAttributes(classes: "rounded search w-100 h-100", id: "search-input")
                          .ToInput(HtmlInputType.Text, ""))
                    <span class="material-symbols-rounded addon-r">search</span>
                </div>
                @(Html.When(JqueryBind.Click)
                      .OnSuccess(dsl => dsl.WithId("search").Trigger.None())
                      .AsHtmlAttributes(classes: "btn btn-light")
                      .ToButton(DataResources.Continue))

                @(await Html.PartialAsync("~/Views/Shared/DropDown_Tmpl.cshtml", new DropdownModel
                {
                    Button = new DropdownModel.ButtonSettings
                    {
                        Text = DataResources.Faculty
                    },
                    Items = new List<IHtmlContent>
                    {
                        Html.Controls().Dropdown.List(settings =>
                        {
                            settings.Id = GlobalSelectors.FacultyListId;
                            settings.Url = Url.Dispatcher().Query<GetFacultiesQuery>(new { }).AsJson();
                            settings.CustomTemplate = "~/Views/Shared/DropDown/DropDownItem_Tmpl.cshtml";
                            settings.OnSuccess = dsl => Html.Controls().Dropdown.SetTitle(dsl, Selector.Jquery.EqualsAttribute("key", facultyId).Attr("code"));
                            settings.OnClick = dsl =>
                            {
                                Html.Controls().Dropdown.SetTitle(dsl, Selector.Event.Data.For("Code"));
                                dsl.WithName(GlobalSelectors.FacultyId).JQuery.Attr.Val(Selector.Event.Data.For("Id"));
                                dsl.WithId("search-input").JQuery.Attr.Val("");
                                dsl.WithId("search").JQuery.Dom.Html();
                            };
                        })
                    }
                }))
            </div>
            @(Html.When(JqueryBind.None)
                  .StopPropagation()
                  .Ajax(o =>
                  {
                      o.Global = false;
                      o.Url = Url.Dispatcher().Query<GetExportSearchQuery>(new
                      {
                          Search = Selector.Jquery.Id("search-input"),
                          FacultyId = Selector.Jquery.Name(GlobalSelectors.FacultyId)
                      }).AsJson();
                  })
                  .OnSuccess(dsl => dsl.Self().Insert.WithTemplateByView("~/Views/View/Tmpl/Search_Tmpl.cshtml").Html())
                  .AsHtmlAttributes(classes: "d-flex flex-column p-1 gap-2 overflow-auto flex-grow-1 justify-content-center", id: "search")
                  .ToDiv())
        </div>
    </div>
}
