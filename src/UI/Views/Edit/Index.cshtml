@{
    var buttonTextId = Guid.NewGuid().ToString();
    var addNewButtonName = Guid.NewGuid().ToString();
    var addNewButtonDivId = Guid.NewGuid().ToString();

    Action<IIncodingMetaLanguageCallbackBodyDsl, string, string> load = (dsl, template, text) =>
    {
        dsl.WithId(GlobalSelectors.EditListId).Insert.WithTemplateByView(template).Html();
        dsl.WithId(GlobalSelectors.EditAreaId).Insert
           .WithTemplateByUrl(Url.Dispatcher().Model(string.Empty).AsView("~/Views/Shared/Placeholder_Select.cshtml")).Html();
        dsl.WithId(buttonTextId).Insert.Use(text).Text();
    };

    Action<IIncodingMetaLanguageCallbackBodyDsl, string> addNewButton = (dsl, url) =>
    {
        dsl.WithName(addNewButtonName).JQuery.Dom.Remove();
        dsl.WithId(addNewButtonDivId).Insert.Use(@<text>
                                                     @(Html.When(JqueryBind.Click)
                                                           .Ajax(url)
                                                           .OnSuccess(inDsl => inDsl.WithId(GlobalSelectors.EditAreaId).Insert.Html())
                                                           .AsHtmlAttributes(new
                                                           {
                                                               @class = "btn btn-light flex-grow-1",
                                                               name = addNewButtonName
                                                           })
                                                           .ToButton(DataResources.Add))
                                                  </text>)
           .Html();
    };
}

<div class="d-flex flex-grow-1 gap-3 w-100 h-100">
    <div class="w-px-360 flex-shrink-0 d-flex flex-column gap-2">
        @await Html.PartialAsync("~/Views/Shared/DropDown_Tmpl.cshtml", new DropdownModel
               {
                   Button = new DropdownModel.ButtonSettings
                   {
                       Text = DataResources.Choose,
                       Title = DataResources.Choose,
                       Classes = "w-100 btn-primary",
                       Id = buttonTextId
                   },
                   DropdownMenu = new DropdownModel.DropdownMenuSettings
                   {
                       Classes = "w-100"
                   },
                   Items = new List<IHtmlContent>
                   {
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Building;
                           settings.Id = nameof(Building);
                           settings.Url = Url.Dispatcher().Query(new GetBuildingsQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/Building/Tmpl/Item_Tmpl.cshtml", DataResources.Building);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditBuildingCommand.AsQuery>().AsView("~/Views/Edit/Building/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Auditorium;
                           settings.Id = nameof(Auditorium);
                           settings.Url = Url.Dispatcher().Query(new GetAuditoriumsQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/Auditorium/Tmpl/Item_Tmpl.cshtml", DataResources.Auditorium);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditAuditoriumCommand.AsQuery>().AsView("~/Views/Edit/Auditorium/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.AuditoriumKind;
                           settings.Id = nameof(AuditoriumKind);
                           settings.Url = Url.Dispatcher().Query(new GetAuditoriumKindsQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/AuditoriumKind/Tmpl/Item_Tmpl.cshtml", DataResources.AuditoriumKind);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditAuditoriumKindCommand.AsQuery>().AsView("~/Views/Edit/AuditoriumKind/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Faculty;
                           settings.Id = nameof(Faculty);
                           settings.Url = Url.Dispatcher().Query(new GetFacultiesQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/Faculty/Tmpl/Item_Tmpl.cshtml", DataResources.Faculty);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditFacultyCommand.AsQuery>().AsView("~/Views/Edit/Faculty/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Department;
                           settings.Id = nameof(Department);
                           settings.Url = Url.Dispatcher().Query(new GetDepartmentsQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/Department/Tmpl/Item_Tmpl.cshtml", DataResources.Department);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditDepartmentCommand.AsQuery>().AsView("~/Views/Edit/Department/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Teacher;
                           settings.Id = nameof(Teacher);
                           settings.Url = Url.Dispatcher().Query(new GetTeachersQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/Teacher/Tmpl/Item_Tmpl.cshtml", DataResources.Teacher);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditTeacherCommand.AsQuery>().AsView("~/Views/Edit/Teacher/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Divider(),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Discipline;
                           settings.Id = nameof(Discipline);
                           settings.Url = Url.Dispatcher().Query(new GetDisciplinesQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/Discipline/Tmpl/Item_Tmpl.cshtml", DataResources.Discipline);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditDisciplineCommand.AsQuery>().AsView("~/Views/Edit/Discipline/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Divider(),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Group;
                           settings.Id = nameof(Group);
                           settings.Url = Url.Dispatcher().Query(new GetGroupsQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Edit/Group/Tmpl/Item_Tmpl.cshtml", DataResources.Group);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditGroupCommand.AsQuery>().AsView("~/Views/Edit/Group/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Divider(),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.ScheduleFormat;
                           settings.Id = nameof(ScheduleFormat);
                           settings.Url = Url.Dispatcher().Query(new AddOrEditScheduleFormatCommand.AsQuery()).AsView("~/Views/Edit/ScheduleFormat/AddOrEdit.cshtml");
                           settings.OnSuccess = dsl =>
                           {
                               dsl.WithId(GlobalSelectors.EditAreaId).Insert.Html();
                               dsl.WithId(addNewButtonDivId).Insert.Use(@<text>
                                                                            <div class="btn btn-light flex-grow-1 disabled">
                                                                                @DataResources.Add
                                                                            </div>
                                                                         </text>)
                                  .Html();
                               dsl.WithId(buttonTextId).Insert.Use(DataResources.ScheduleFormat).Text();
                               dsl.WithId(GlobalSelectors.EditListId).Insert
                                  .WithTemplateByUrl(Url.Dispatcher().Model(DataResources.Unavailable).AsView("~/Views/Shared/Placeholder_Select.cshtml")).Html();
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Occupation;
                           settings.Id = "B8710A44-3A5F-4ABF-8286-E760AB9C5382";
                           settings.Url = Url.Dispatcher().AsView("~/Views/Edit/ItemBusyness/Index.cshtml");
                           settings.OnSuccess = dsl =>
                           {
                               dsl.WithId(GlobalSelectors.EditAreaId).Insert.Html();
                               dsl.WithId(addNewButtonDivId).Insert.Use(@<text>
                                                                            <div class="btn btn-light flex-grow-1 disabled">
                                                                                @DataResources.Add
                                                                            </div>
                                                                         </text>)
                                  .Html();
                               dsl.WithId(buttonTextId).Insert.Use(DataResources.Occupation).Text();
                               dsl.WithId(GlobalSelectors.EditListId).Insert
                                  .WithTemplateByUrl(Url.Dispatcher().Model(DataResources.Unavailable).AsView("~/Views/Shared/Placeholder_Select.cshtml")).Html();
                           };
                       })
                   }
               })

        <div class="d-flex gap-2">
            <div class="flex-grow-1 input">
                <input type="text" class="rounded search w-100 h-100" disabled/>
                <span class="material-symbols-rounded addon-r">search</span>
            </div>

            <div class="btn btn-light flex-shrink-0 disabled">
                @DataResources.Filter
            </div>
        </div>

        <div id="@addNewButtonDivId" class="d-flex">
            <div class="btn btn-light flex-grow-1 disabled">
                @DataResources.Add
            </div>
        </div>

        <div class="w-100 h-100 d-flex flex-column gap-2 rounded" id="@GlobalSelectors.EditListId">
            @await Html.PartialAsync("~/Views/Shared/Placeholder_Select.cshtml", string.Empty)
        </div>
    </div>

    <div class="d-flex flex-grow-1 rounded" id="@GlobalSelectors.EditAreaId">
        @await Html.PartialAsync("~/Views/Shared/Placeholder_Select.cshtml", string.Empty)
    </div>
</div>
