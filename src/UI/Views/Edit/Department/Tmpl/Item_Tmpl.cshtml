@using Domain.Api
@using Domain.Persistence
@using Incoding.Web.MvcContrib
@using Resources
@using UI.Common.Extensions
@using (var template = Html.Incoding().Template<GetDepartmentsQuery.Response>())
{
    @using (var each = template.ForEach())
    {
        var code = $"code[{each.Index()}]";
        var currentDepartmentName = nameof(Department) + each.Index();

        <div class="d-flex shadow gap-2 rounded p-1" role="item">
            @Html.Hidden(currentDepartmentName, each.For(r => r.Id))
            <div class="col-2 my-auto">
                <input for="code" name="@code" type="text" class="form-control text-center border-0" placeholder="@DataResources.Abbreviation" value="@each.For(r => r.Code)"/>
            </div>
            <div class="col-7 my-auto">
                @(Html.When(JqueryBind.Change)
                      .OnSuccess(dsl => dsl.Self().Call("suggestInputValueByNamingCase", Selector.Jquery.Self(), code))
                      .AsHtmlAttributes(new
                      {
                          @class = "form-control border-0",
                          placeholder = DataResources.Placeholder_FacultyName
                      })
                      .ToInput(HtmlInputType.Text, each.For(s => s.Name)))
            </div>
            <div class="col d-flex">
                <div class="my-auto ms-auto align-self-end">
                    @(Html.When(JqueryBind.Click)
                          .Ajax(Url.Dispatcher().Query<AddOrEditDepartmentCommand.AsView>(new
                          {
                              Id = Selector.Jquery.Name(currentDepartmentName)
                          }).AsView("~/Views/Edit/Department/AddOrEdit.cshtml"))
                          .OnSuccess(dsl => dsl.WithId(GlobalSelectors.MainId).Insert.Html())
                          .AsHtmlAttributes(new { @class = "btn btn-light" })
                          .ToButton(@<span class="material-symbols-rounded">edit</span>))

                    @(Html.When(JqueryBind.Click)
                          .Ajax(Url.Dispatcher().Push<DeleteDepartmentCommand>(new
                          {
                              Id = Selector.Jquery.Name(currentDepartmentName)
                          }))
                          .OnSuccess(dsl => dsl.Document.RedirectToSelf())
                          .AsHtmlAttributes(new { @class = "btn btn-light" })
                          .ToButton(@<span class="material-symbols-rounded">delete</span>))
                </div>
            </div>
        </div>
    }
}
