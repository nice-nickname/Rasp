@using Domain.Common
@model LastIndexModel<GetDisciplinePlanQuery.Response>
@{
    Action<IIncodingMetaLanguageCallbackBodyDsl, int> controlOnChange = (dsl, i) => dsl.With(s => s.Role($"sg-{i}")).JQuery.Attr.Val(Selector.Jquery.Self());

    Func<int, string, string> name = (i, name) => $"SubDisciplines[{Model.LastIndex}].Plans[{i}].{name}";

    int i;
}

@if (Model.Items.Count == 0)
{
    <div>@DataResources.TeacherOrGroupNotSelected</div>
    return;
}

<ul class="nav nav-tabs" role="tablist">
    @{
        i = 0;
    }
    @foreach (var item in Model.Items)
    {
        <li class="nav-item" role="presentation">
            <button id="group-plan-@Model.LastIndex-@i-nav"
                    data-bs-toggle="tab"
                    data-bs-target="#group-plan-@Model.LastIndex-@i-tab"
                    type="button"
                    role="tab"
                    class="nav-link @(i == 0 ? "active" : "")">
                @item.Group
            </button>
        </li>
        i++;
    }
</ul>
<div class="tab-content">
    @{
        i = 0;
        var k = 0;
    }

    @foreach (var item in Model.Items)
    {
        <div id="group-plan-@Model.LastIndex-@i-tab" class="tab-pane fade @(i == 0 ? "show active" : "") p-1">
            <div class="m-1 d-flex">
                <div class="flex-grow-0">
                    <div class="form-group">
                        @Html.Label(name(i, nameof(item.SubGroupCount)), DataResources.DivideToSubGroups)
                        @Html.Controls().Select(control =>
                        {
                            control.Items = Html.Dispatcher().Query(new GetGroupDivisionForDDQuery { Selected = item.SubGroupCount });
                            control.Name = name(i, nameof(item.SubGroupCount));
                            control.OnInit = dsl => controlOnChange(dsl, i);
                            control.OnChange = dsl => controlOnChange(dsl, i);
                        })
                        @Html.ValidationMessage(name(i, nameof(item.SubGroupCount)))
                    </div>
                </div>
                <div class="flex-grow-1">

                </div>
            </div>
            <div class="mt-3">
                <table class="table" role="st-@i">
                    <thead class="table-light shadow">
                        <tr>
                            <th class="tc-options"></th>
                            <th class="fw-normal">Распределено
                                @(Html.When(JqueryBind.Change)
                                      .StopPropagation()
                                      .OnSuccess(dsl => dsl.Self().Insert.Use(Selector.JS.Sum(Selector.Jquery.Role("hours"), Selector.Jquery.Role($"st-{i}"))).Text())
                                      .AsHtmlAttributes(new { role = "assigned" })
                                      .ToTag(HtmlTag.Span, item.TotalAssignedHours.ToString()))
                                / 
                                <span role="total">@item.TotalHours</span></th>
                            <th colspan="@item.Header.Count">@DataResources.Weeks</th>
                        </tr>
                        <tr>
                            <th></th>
                            <th class="tc-full-name">@DataResources.Teacher</th>
                            @foreach (var th in item.Header)
                            {
                                <th class="tc-hours">@th.Week</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var td in item.TeacherHoursByWeeks)
                        {
                            <tr>
                                <td class="tc-options">
                                    @await Html.PartialAsync("DropDown_Tmpl", new DropdownModel
                                           {
                                               Items = new List<IHtmlContent>
                                               {
                                                   Html.Controls().Dropdown.Button(b =>
                                                   {
                                                       b.Text = "Сбросить";
                                                       b.OnSuccess = dsl =>
                                                       {
                                                           dsl.WithSelf(s => s.Closest(HtmlTag.Tr).Find(c => c.Role("hours"))).JQuery.Attr.Val(0);
                                                           dsl.WithSelf(s => s.Closest(HtmlTag.Table).Find(c => c.Role("assigned"))).Trigger.Change();
                                                       };
                                                   }),
                                                   Html.Controls().Dropdown.Button(b =>
                                                   {
                                                       b.Text = "Распределить с начала";
                                                       b.OnSuccess = dsl =>
                                                       {

                                                       };
                                                   }),
                                                   Html.Controls().Dropdown.Button(b =>
                                                   {
                                                       b.Text = "Распределить с конца";
                                                       b.OnSuccess = dsl =>
                                                       {
                                                           
                                                       };
                                                   }),
                                                   Html.Controls().Dropdown.Button(b =>
                                                   {
                                                       b.Text = "Умное распределение";
                                                       b.OnSuccess = dsl =>
                                                       {
                                                           
                                                       };
                                                   })
                                               },
                                               Button = new DropdownModel.ButtonSettings
                                               {
                                                   Icon = "more_horiz",
                                                   Classes = "btn-light p-1"
                                               }
                                           })
                                </td>
                                <td class="tc-full-name align-middle">
                                    @Html.Hidden(name(k, nameof(td.Id)), td.Id)
                                    @Html.Hidden(name(k, nameof(td.TeacherId)), td.TeacherId)
                                    @Html.Hidden(name(k, nameof(item.GroupId)), item.GroupId)
                                    @Html.Hidden(name(k, nameof(item.SubGroupCount)), "", new { role = $"sg-{i}" })
                                    @td.Teacher
                                </td>
                                @{
                                    var j = 0;
                                }
                                @foreach (var week in td.WeekItems)
                                {
                                    <td class="tc-hours tc-input">
                                        @Html.Hidden(name(k, nameof(AddOrEditDisciplineCommand.PlanItem.WeekItems)) + $"[{j}].{nameof(AddOrEditDisciplineCommand.WeekItem.Week)}", week.Week)
                                        @(Html.When(JqueryBind.Change)
                                              .StopPropagation()
                                              .OnSuccess(dsl => dsl.WithSelf(s => s.Closest(HtmlTag.Table).Find(c => c.Role("assigned"))).Trigger.Change())
                                              .AsHtmlAttributes(new
                                              {
                                                  name = $"{name(k, nameof(AddOrEditDisciplineCommand.PlanItem.WeekItems))}" + $"[{j}].{nameof(AddOrEditDisciplineCommand.WeekItem.Hours)}",
                                                  step = 1,
                                                  role = "hours",
                                                  pattern = "[0-9]"
                                              })
                                              .ToInput(HtmlInputType.Number, week.Hours.ToString()))
                                    </td>
                                    j++;
                                }
                            </tr>
                            k++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
        i++;
    }
</div>
