@using Domain.Common
@using Domain.App.Api
@model LastIndexModel<GetDisciplinePlanQuery.Response>
@{
    Action<IIncodingMetaLanguageCallbackBodyDsl, int> controlOnChange = (dsl, i) => dsl.With(s => s.Role($"sg-{Model.LastIndex}-{i}")).JQuery.Attr.Val(Selector.Jquery.Self());

    Func<int, string, string> name = (i, name) => $"SubDisciplines[{Model.LastIndex}].Plans[{i}].{name}";

    int i;
}

@if (Model.Items.Count == 0)
{
    <div>@DataResources.TeacherOrGroupNotSelected</div>
    return;
}

<ul class="nav nav-tabs" role="tablist">
    @{
        i = 0;
    }
    @foreach (var item in Model.Items)
    {
        <li class="nav-item" role="presentation">
            <button id="group-plan-@Model.LastIndex-@i-nav"
                    data-bs-toggle="tab"
                    data-bs-target="#group-plan-@Model.LastIndex-@i-tab"
                    type="button"
                    role="tab"
                    class="nav-link @(i == 0 ? "active" : "")">
                @item.Group
            </button>
        </li>
        i++;
    }
</ul>
<div class="tab-content">
    @{
        i = 0;
        var k = 0;
    }

    @foreach (var item in Model.Items)
    {
        <div id="group-plan-@Model.LastIndex-@i-tab" class="tab-pane fade @(i == 0 ? "show active" : "") p-1">
            <div class="m-1 d-flex">
                <div class="flex-grow-0">
                    <div class="form-group">
                        @Html.Label(name(i, nameof(item.SubGroupCount)), DataResources.DivideToSubGroups)
                        @Html.Controls().Select(control =>
                        {
                            control.Items = Html.Dispatcher().Query(new GetGroupDivisionForDDQuery { Selected = item.SubGroupCount });
                            control.Name = name(i, nameof(item.SubGroupCount));
                            control.OnInit = dsl => controlOnChange(dsl, i);
                            control.OnChange = dsl => controlOnChange(dsl, i);
                        })
                        @Html.ValidationMessage(name(i, nameof(item.SubGroupCount)))
                    </div>
                </div>
                <div class="flex-grow-1">

                </div>
            </div>
            <div class="mt-3">
                <table class="table" role="st-@Model.LastIndex-@i">
                    <thead class="table-light shadow">
                        <tr>
                            <th class="tc-options">
                                @await Html.PartialAsync("DropDown_Tmpl", new DropdownModel
                                       {
                                           Items = new List<IHtmlContent>
                                           {
                                               Html.Controls().Dropdown.Button(b =>
                                               {
                                                   b.Text = DataResources.ResetAll;
                                                   b.OnSuccess = dsl => dsl.Self().JQuery.Call("disciplinePlanReset");
                                               }),
                                               Html.Controls().Dropdown.Divider(),
                                               Html.Controls().Dropdown.Button(b =>
                                               {
                                                   b.Text = DataResources.CopyForAllGroups;
                                                   b.OnSuccess = dsl => dsl.Self().JQuery.Call("disciplinePlanCopy");
                                               })
                                           },
                                           Button = new DropdownModel.ButtonSettings
                                           {
                                               Icon = "more_horiz",
                                               Classes = "btn-light p-1"
                                           }
                                       })
                            </th>
                            <th class="fw-normal align-middle">
                                Распределено
                                @(Html.When(JqueryBind.Change)
                                      .StopPropagation()
                                      .OnSuccess(dsl => dsl.Self().Insert.Use(Selector.JS.Sum(Selector.Jquery.Role("hours"), Selector.Jquery.Role($"st-{Model.LastIndex}-{i}"))).Text())
                                      .AsHtmlAttributes(new { role = "assigned" })
                                      .ToTag(HtmlTag.Span, item.TotalAssignedHours.ToString()))
                                /
                                <span role="total">@item.TotalHours</span>
                            </th>
                            <th class="align-middle" colspan="@item.Header.Count">@DataResources.Weeks</th>
                        </tr>
                        <tr>
                            <th></th>
                            <th class="tc-full-name">@DataResources.Teacher</th>
                            @foreach (var th in item.Header)
                            {
                                <th class="tc-hours">@th.Week</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var renderedTeacherWhenIsParallel = false;
                        }
                        @foreach (var td in item.TeacherHoursByWeeks)
                        {
                            if (item.IsParallelHours && renderedTeacherWhenIsParallel)
                            {
                                <tr class="d-none">
                                    <td>
                                        @Html.Hidden(name(k, nameof(td.Id)), td.Id)
                                        @Html.Hidden(name(k, nameof(td.TeacherId)), td.TeacherId)
                                        @Html.Hidden(name(k, nameof(item.GroupId)), item.GroupId)
                                        @Html.Hidden(name(k, nameof(item.SubGroupCount)), "", new { role = $"sg-{Model.LastIndex}-{i}" })
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td class="tc-options" role="row-button">
                                        @await Html.PartialAsync("DropDown_Tmpl", new DropdownModel
                                               {
                                                   Items = new List<IHtmlContent>
                                                   {
                                                       Html.Controls().Dropdown.Button(b =>
                                                       {
                                                           b.Text = DataResources.Reset;
                                                           b.OnSuccess = dsl =>
                                                           {
                                                               dsl.WithSelf(s => s.Closest(HtmlTag.Tr).Find(c => c.Role("hours"))).JQuery.Attr.Val(0);
                                                               dsl.WithSelf(s => s.Closest(HtmlTag.Table).Find(c => c.Role("assigned"))).Trigger.Change();
                                                           };
                                                       }),
                                                       Html.Controls().Dropdown.Divider(),
                                                       Html.Controls().Dropdown.Button(b =>
                                                       {
                                                           b.Text = DataResources.FillFromStart;
                                                           b.OnSuccess = dsl => { dsl.Self().JQuery.Call("disciplinePlanFill", "asc"); };
                                                       }),
                                                       Html.Controls().Dropdown.Button(b =>
                                                       {
                                                           b.Text = DataResources.FillFromEnd;
                                                           b.OnSuccess = dsl => { dsl.Self().JQuery.Call("disciplinePlanFill", "desc"); };
                                                       })
                                                   },
                                                   Button = new DropdownModel.ButtonSettings
                                                   {
                                                       Icon = "more_horiz",
                                                       Classes = "btn-light p-1"
                                                   }
                                               })
                                    </td>
                                    <td class="tc-full-name align-middle">
                                        @Html.Hidden(name(k, nameof(td.Id)), td.Id)
                                        @Html.Hidden(name(k, nameof(td.TeacherId)), td.TeacherId)
                                        @Html.Hidden(name(k, nameof(item.GroupId)), item.GroupId)
                                        @Html.Hidden(name(k, nameof(item.SubGroupCount)), "", new { role = $"sg-{Model.LastIndex}-{i}" })
                                        @(item.IsParallelHours ? DataResources.AllTeachers : td.Teacher)
                                    </td>
                                    @{
                                        var j = 0;
                                    }
                                    @foreach (var week in td.WeekItems)
                                    {
                                        <td class="tc-hours tc-input">
                                            @Html.Hidden(name(k, nameof(AddOrEditDisciplineCommand.PlanItem.WeekItems)) + $"[{j}].{nameof(AddOrEditDisciplineCommand.WeekItem.Week)}", week.Week)
                                            @(Html.When(JqueryBind.Change)
                                                  .StopPropagation()
                                                  .OnSuccess(dsl => dsl.WithSelf(s => s.Closest(HtmlTag.Table).Find(c => c.Role("assigned"))).Trigger.Change())
                                                  .AsHtmlAttributes(new
                                                  {
                                                      name = $"{name(k, nameof(AddOrEditDisciplineCommand.PlanItem.WeekItems))}" + $"[{j}].{nameof(AddOrEditDisciplineCommand.WeekItem.Hours)}",
                                                      step = 1,
                                                      role = "hours",
                                                      pattern = "[0-9]"
                                                  })
                                                  .ToInput(HtmlInputType.Number, week.Hours.ToString()))
                                        </td>
                                        j++;
                                    }
                                </tr>
                                renderedTeacherWhenIsParallel = true;
                            }
                            k++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
        i++;
    }
</div>
