@using Domain.Common
@model LastIndexModel<GetDisciplinePlanQuery.Response>
@{
    Action<IIncodingMetaLanguageCallbackBodyDsl, int> controlOnChange = (dsl, i) => dsl.With(s => s.Role($"sg-{i}")).JQuery.Attr.Val(Selector.Jquery.Self());

    Func<int, string, string> name = (i, name) => $"SubDisciplines[{Model.LastIndex}].Plans[{i}].{name}";

    int i;
}

<ul class="nav nav-tabs" role="tablist">
    @{
        i = 0;
    }
    @foreach (var item in Model.Items)
    {
        <li class="nav-item" role="presentation">
            <button id="group-plan-@Model.LastIndex-@i-nav"
                    data-bs-toggle="tab"
                    data-bs-target="#group-plan-@Model.LastIndex-@i-tab"
                    type="button"
                    role="tab"
                    class="nav-link @(i == 0 ? "active" : "")">
                @item.Group
            </button>
        </li>
        i++;
    }
</ul>
<div class="tab-content">
    @{
        i = 0;
        int k = 0;
    }

    @foreach (var item in Model.Items)
    {
        <div id="group-plan-@Model.LastIndex-@i-tab" class="tab-pane fade @(i == 0 ? "show active" : "") p-1">
            <div class="form-group p-3">
                @Html.Label(name(i, nameof(item.SubGroupCount)), DataResources.DivideToSubGroups)
                @Html.Controls().Select(control =>
                {
                    control.Items = Html.Dispatcher().Query(new GetGroupDivisionForDDQuery { Selected = item.SubGroupCount });
                    control.Name = name(i, nameof(item.SubGroupCount));
                    control.OnInit = dsl => controlOnChange(dsl, i);
                    control.OnChange = dsl => controlOnChange(dsl, i);
                })
                @Html.ValidationMessage(name(i, nameof(item.SubGroupCount)))
            </div>
            <div>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th></th>
                            <th colspan="@item.Header.Count">@DataResources.Weeks</th>
                        </tr>
                        <tr>
                            <th class="tc-full-name">@DataResources.Teacher</th>
                            @foreach (var th in item.Header)
                            {
                                <th class="tc-hours">@th.Week</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var td in item.TeacherHoursByWeeks)
                        {
                            <tr>
                                <td class="tc-full-name">
                                    @Html.Hidden(name(k, nameof(td.Id)), td.Id)
                                    @Html.Hidden(name(k, nameof(td.TeacherId)), td.TeacherId)
                                    @Html.Hidden(name(k, nameof(item.GroupId)), item.GroupId)
                                    @Html.Hidden(name(k, nameof(item.SubGroupCount)), "", new { role = $"sg-{i}" })
                                    @td.Teacher
                                </td>
                                @{
                                    var j = 0;
                                }
                                @foreach (var week in td.WeekItems)
                                {
                                    <td class="tc-hours tc-input">
                                        @Html.Hidden(name(k, nameof(AddOrEditDisciplineCommand.PlanItem.WeekItems)) + $"[{j}].{nameof(AddOrEditDisciplineCommand.WeekItem.Week)}", week.Week)
                                        <input name='@(name(k, nameof(AddOrEditDisciplineCommand.PlanItem.WeekItems)) + $"[{j}].{nameof(AddOrEditDisciplineCommand.WeekItem.Hours)}")'
                                               value="@week.Hours"
                                               type="number" step="1"/>
                                    </td>
                                    j++;
                                }
                            </tr>
                            k++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
        i++;
    }
</div>
