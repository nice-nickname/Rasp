@using (var template = Html.Incoding().Template<GetGroupsQuery.Response>())
{
    using (var each = template.ForEach())
    {
        <div class="d-flex shadow gap-2 rounded py-1 px-2" role="item">
            <div class="my-2" title="@each.For(r => r.Code)">
                @each.For(r => r.Code)
            </div>
            <div class="my-2 ms-3" title="@each.For(r => r.DepartmentName)">
                @each.For(r => r.DepartmentCode)
            </div>

            <div class="col d-flex">
                <div class="my-auto ms-auto align-self-end">
                    @(Html.When(JqueryBind.Click)
                          .Ajax(Url.Dispatcher().Query<AddOrEditGroupCommand.AsView>(new { Id = each.For(r => r.Id) }).AsView("~/Views/Edit/Group/AddOrEdit.cshtml"))
                          .OnSuccess(dsl => dsl.WithId(GlobalSelectors.EditAreaId).Insert.Html())
                          .AsHtmlAttributes(new
                          {
                              @class = "btn btn-light",
                              title = DataResources.Edit
                          })
                          .ToButton(@<span class="material-symbols-rounded">edit</span>))

                    @(Html.When(JqueryBind.Click)
                          .Ajax(Url.Dispatcher().Push<DeleteGroupCommand>(new { Id = each.For(r => r.Id) }))
                          .OnSuccess(dsl => dsl.WithId(nameof(Group)).Trigger.Click())
                          .AsHtmlAttributes(new
                          {
                              @class = "btn btn-light",
                              title = DataResources.Delete
                          })
                          .ToButton(@<span class="material-symbols-rounded">delete</span>))
                </div>
            </div>
        </div>
    }
}
