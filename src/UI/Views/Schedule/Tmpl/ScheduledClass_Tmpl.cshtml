@model ITemplateSyntax<GetScheduleByWeekQuery.ClassItem>

<div class="h-100 bg-light rounded class-card d-flex flex-column shadow shadow-hover cursor-grab @(Model.NotInline(r => r.AuditoriumId, "class-card-warning"))" role="drag-element" name="card">
    @Html.Hidden(nameof(SaveScheduleCommand.DisciplinePlanId), Model.For(r => r.DisciplinePlanId))
    @Html.Hidden(nameof(SaveScheduleCommand.SubGroupNo), Model.For(r => r.SubGroupNo))
    @Html.Hidden(nameof(SaveScheduleCommand.Id), Model.For(r => r.Id))

    <div class="w-100 rounded-top flex-shrink-0" style="height: 0.25rem; background-color: @Model.For(r => r.Color)"></div>

    <div class="d-flex mx-1 mt-1 gap-2">
        <div class="flex-grow-1 discipline-code" title="@Model.For(r => r.Discipline)">
            @Model.For(r => r.DisciplineCode)
        </div>
        <div class="flex-grow-1 discipline text-overflow-elipsis text-nowrap overflow-hidden" title="@Model.For(r => r.Discipline)">
            @Model.For(r => r.Discipline)
        </div>

        <div class="flex-shrink-0 subdiscipline-code" title="@Model.For(r => r.SubDiscipline)">
            @Model.For(r => r.SubDisciplineCode)
        </div>
        <div class="flex-shrink-0 subdiscipline" title="@Model.For(r => r.SubDiscipline)">
            @Model.For(r => r.SubDiscipline)
        </div>
    </div>

    <div class="mx-1 d-flex gap-2">
        <div class="flex-grow-1">
            @Model.Inline(r => r.HasSubGroups,
                          @<text>
                              @Model.For(r => r.SubGroupNo) @DataResources.SubGroup
                           </text>,
                          @<text>
                              -
                           </text>)
        </div>
        <div class="flex-shrink-0 text-nowrap text-overflow-elipsis overflow-hidden"
             @(Model.IsInline(r => r.IsGroup, $@"title=""{Model.For(r => r.Department)}""")) @(Model.IsInline(r => r.IsTeacher, $@"title=""{Model.For(r => r.Department)}"""))>
            @Model.IsInline(r => r.IsGroup, Model.For(r => r.DepartmentCode))
            @Model.IsInline(r => r.IsAuditorium, Model.For(r => r.Group))
        </div>
    </div>

    <div class="mx-1 d-flex gap-2">
        <div class="flex-grow-1 text-nowrap text-overflow-elipsis overflow-hidden">
            @Model.IsInline(r => r.IsGroup, Model.For(r => r.Teacher))
            @Model.IsInline(r => r.IsAuditorium, Model.For(r => r.Teacher))
            @Model.IsInline(r => r.IsTeacher, Model.For(r => r.Group))
        </div>
        <div class="flex-shrink-0">
            @Model.IsInline(r => r.IsTeacher, Model.For(r => r.DepartmentCode))
        </div>
    </div>

    @Html.Hidden(nameof(SaveScheduleCommand.AuditoriumId), Model.For(r => r.AuditoriumId))

    @{
        var auditoriumTextId = $"auditorium-{Model.For(r => r.DisciplineId)}-{Model.For(r => r.DisciplinePlanId)}-{Model.For(r => r.SubDisciplineId)}";
    }

    @await Html.PartialAsync("~/Views/Shared/DropDown_Tmpl.cshtml", new DropdownModel
           {
               Button = new DropdownModel.ButtonSettings
               {
                   Classes = "w-100 btn-light btn-sm h-px-30",
                   Text = Model.For(r => r.Auditorium)
               },
               Items = new List<IHtmlContent>
               {
                   Html.Controls().Dropdown.List(settings =>
                   {
                       settings.Url = Url.Dispatcher().Query<GetAuditoriumsScheduleForDDQuery>(new
                       {
                           Capacity = Model.For(r => r.StudentCount),
                           Week = Selector.Jquery.Name<GetAuditoriumsScheduleForDDQuery>(r => r.Week),
                           Day = Model.For(r => r.Day),
                           Order = Model.For(r => r.Order),
                           AuditoriumId = Model.For(r => r.AuditoriumId),
                           SubDisciplineId = Model.For(r => r.SubDisciplineId)
                       }).AsJson();
                       settings.OnClick = dsl =>
                       {
                           dsl.WithId(auditoriumTextId).Insert.Use(Selector.Event.Data.For("text")).Html();
                           dsl.WithSelf(r => r.Closest(q => q.Name("card")).Find(q => q.Name<SaveScheduleCommand>(w => w.AuditoriumId)))
                              .JQuery.Attr.Val(Selector.Event.Data.For("value"));
                       };
                   })
               },
               Classes = "mx-1 mb-1 h-px-30"
           })
</div>
