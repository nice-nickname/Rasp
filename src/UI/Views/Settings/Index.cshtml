@{
    var buttonTextId = Guid.NewGuid().ToString();
    var addNewButtonName = Guid.NewGuid().ToString();
    var addNewButtonDivId = Guid.NewGuid().ToString();
    var searchInputId = Guid.NewGuid().ToString();

    Action<IIncodingMetaLanguageCallbackBodyDsl, string, string> load = (dsl, template, text) =>
    {
        dsl.WithId(GlobalSelectors.EditListId).Insert.WithTemplateByView(template).Html();
        dsl.WithId(GlobalSelectors.EditAreaId).Insert
           .WithTemplateByUrl(Url.Dispatcher().Model(string.Empty).AsView("~/Views/Shared/Placeholder_Select.cshtml")).Html();
        dsl.WithId(searchInputId).JQuery.Attr.Remove(HtmlAttribute.Disabled);
        dsl.WithId(buttonTextId).Insert.Use(text).Text();
        dsl.WithId(buttonTextId).JQuery.Attr.Set(HtmlAttribute.Title, text);
        dsl.WithId(GlobalSelectors.EditListId).Insert
           .WithTemplateByUrl(Url.Dispatcher().Model(DataResources.NoItemsAvailable).AsView("~/Views/Shared/Placeholder_Select.cshtml")).Html()
           .If(() => Selector.Jquery.Id(GlobalSelectors.EditListId).Children().Length() == 0);
    };

    Action<IIncodingMetaLanguageCallbackBodyDsl, string> addNewButton = (dsl, url) =>
    {
        dsl.WithName(addNewButtonName).JQuery.Dom.Remove();
        dsl.WithId(addNewButtonDivId).Insert.Use(@<text>
                                                     @using (Html.When(JqueryBind.Click)
                                                                 .Ajax(url)
                                                                 .OnSuccess(inDsl => inDsl.WithId(GlobalSelectors.EditAreaId).Insert.Html())
                                                                 .AsHtmlAttributes(new
                                                                 {
                                                                     @class = "btn btn-light flex-grow-1",
                                                                     name = addNewButtonName
                                                                 })
                                                                 .ToBeginTag(HtmlTag.Button))
                                                     {
                                                         <span class="material-symbols-rounded">add</span>
                                                         @DataResources.Add
                                                     }
                                                  </text>)
           .Html();
    };
}

<div class="d-flex flex-grow-1 gap-3 w-100 h-100 overflow-hidden px-1">
    <div class="w-px-360 flex-shrink-0 d-flex flex-column gap-2">
        @await Html.PartialAsync("~/Views/Shared/DropDown_Tmpl.cshtml", new DropdownModel
               {
                   Button = new DropdownModel.ButtonSettings
                   {
                       Text = DataResources.Choose,
                       Title = DataResources.Choose,
                       Classes = "w-100 btn-primary",
                       Id = buttonTextId
                   },
                   DropdownMenu = new DropdownModel.DropdownMenuSettings
                   {
                       Classes = "w-100"
                   },
                   Items = new List<IHtmlContent>
                   {
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.AuditoriumKind;
                           settings.Id = nameof(AuditoriumKind);
                           settings.Url = Url.Dispatcher().Query(new GetAuditoriumKindsQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Settings/AuditoriumKind/Tmpl/Item_Tmpl.cshtml", DataResources.AuditoriumKind);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditAuditoriumKindCommand.AsQuery>().AsView("~/Views/Settings/AuditoriumKind/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Faculty;
                           settings.Id = nameof(Faculty);
                           settings.Url = Url.Dispatcher().Query(new GetFacultiesQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Settings/Faculty/Tmpl/Item_Tmpl.cshtml", DataResources.Faculty);
                               addNewButton(dsl, Url.Dispatcher().Query<AddOrEditFacultyCommand.AsQuery>().AsView("~/Views/Settings/Faculty/AddOrEdit.cshtml"));
                           };
                       }),
                       Html.Controls().Dropdown.Divider(),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.ScheduleFormat;
                           settings.Id = nameof(ScheduleFormat);
                           settings.Url = Url.Dispatcher().Query(new AddOrEditScheduleFormatCommand.AsQuery()).AsView("~/Views/Settings/ScheduleFormat/AddOrEdit.cshtml");
                           settings.OnSuccess = dsl =>
                           {
                               dsl.WithId(GlobalSelectors.EditAreaId).Insert.Html();
                               dsl.WithId(addNewButtonDivId).Insert.Use(@<text>
                                                                            <div class="btn btn-light flex-grow-1 disabled">
                                                                                @DataResources.Add
                                                                            </div>
                                                                         </text>)
                                  .Html();
                               dsl.WithId(buttonTextId).Insert.Use(DataResources.ScheduleFormat).Text();
                               dsl.WithId(GlobalSelectors.EditListId).Insert
                                  .WithTemplateByUrl(Url.Dispatcher().Model(DataResources.Unavailable).AsView("~/Views/Shared/Placeholder_Select.cshtml")).Html();
                               dsl.WithId(searchInputId).JQuery.Attr.Set(HtmlAttribute.Disabled);
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.Weekends;
                           settings.Id = nameof(Holidays);
                           settings.Url = Url.Dispatcher().Query(new GetWeekendCalendarQuery()).AsView("~/Views/Settings/Weekends/Weekend.cshtml");
                           settings.OnSuccess = dsl =>
                           {
                               dsl.WithId(GlobalSelectors.EditAreaId).Insert.Html();
                               dsl.WithId(addNewButtonDivId).Insert.Use(@<text>
                                                                            <div class="btn btn-light flex-grow-1 disabled">
                                                                                @DataResources.Add
                                                                            </div>
                                                                         </text>)
                                  .Html();
                               dsl.WithId(buttonTextId).Insert.Use(DataResources.Weekends).Text();
                               dsl.WithId(GlobalSelectors.EditListId).Insert
                                  .WithTemplateByUrl(Url.Dispatcher().Model(DataResources.Unavailable).AsView("~/Views/Shared/Placeholder_Select.cshtml")).Html();
                               dsl.WithId(searchInputId).JQuery.Attr.Set(HtmlAttribute.Disabled);
                           };
                       }),
                       Html.Controls().Dropdown.Button(settings =>
                       {
                           settings.Text = DataResources.SubDisciplines;
                           settings.Id = nameof(SubDisciplineKind);
                           settings.Url = Url.Dispatcher().Query(new GetSubDisciplineKindsQuery()).AsJson();
                           settings.OnSuccess = dsl =>
                           {
                               load(dsl, "~/Views/Settings/SubDisciplineKind/Tmpl/Item_Tmpl.cshtml", DataResources.SubDisciplines);
                               addNewButton(dsl, Url.Dispatcher().Model<AddOrEditSubDisciplineKindCommand>().AsView("~/Views/Settings/SubDisciplineKind/AddOrEdit.cshtml"));
                           };
                       })
                   }
               })

        <div class="d-flex gap-2">
            <div class="flex-grow-1 input">
                @(Html.When(JqueryBind.KeyUp)
                      .OnSuccess(dsl => dsl.Self().JQuery.Call("search", Selector.Jquery.Role("list").ToSelector()))
                      .AsHtmlAttributes(classes: "rounded search w-100 h-100", id: searchInputId)
                      .ToInput(HtmlInputType.Text, string.Empty))
                @(Html.When(JqueryBind.Click)
                      .OnSuccess(dsl => dsl.WithId(searchInputId).Trigger.Invoke(JqueryBind.KeyUp))
                      .AsHtmlAttributes(classes: "btn p-1 addon-r")
                      .ToButton(@<span class="material-symbols-rounded">search</span>))
            </div>

            <div id="@addNewButtonDivId" class="d-flex">
                <div class="btn btn-light flex-grow-1 disabled">
                    <span class="material-symbols-rounded">add</span>
                    @DataResources.Add
                </div>
            </div>
        </div>

        <div class="w-100 h-100 d-flex flex-column rounded flex-grow-1 flex-shrink-1 overflow-auto" role="list" id="@GlobalSelectors.EditListId">
            @await Html.PartialAsync("~/Views/Shared/Placeholder_Select.cshtml", string.Empty)
        </div>
    </div>

    <div class="d-flex flex-grow-1 rounded" id="@GlobalSelectors.EditAreaId">
        @await Html.PartialAsync("~/Views/Shared/Placeholder_Select.cshtml", string.Empty)
    </div>
</div>
